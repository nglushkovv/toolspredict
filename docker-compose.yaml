services:
  postgres:
    image: postgres:latest
    container_name: postgresql
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-aerodb}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5454:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ':9001'
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  spring-service:
    build: ./spring-service
    container_name: spring-service
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_HOST=${MINIO_HOST}
      - RECOGNITION_SERVICE_URL=${RECOGNITION_SERVICE_URL}
      - ENRICHMENT_SERVICE_URL=${ENRICHMENT_SERVICE_URL}
      - PORT=${SPRING_PORT:-8087}
    ports:
      - "${SPRING_PORT:-8087}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  recognition-service:
    build: ./recognition-service
    container_name: recognition-service
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_RAW=bucket-raw
      - MINIO_BUCKET_PROCESSED=bucket-processed
      - PORT=${RECOGNITION_PORT_PORT:-8001}
    ports:
      - "${RECOGNITION_PORT:-8001}:8001"
    depends_on:
      minio:
        condition: service_healthy

  enrichment-service:
    build: ./enrichment-service
    container_name: enrichment-service
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_RAW=bucket-raw
      - MINIO_BUCKET_PROCESSED=bucket-processed
      - PORT=${ENRICHMENT_PORT:-8002}
    ports:
      - "${ENRICHMENT_PORT:-8002}:8002"
    depends_on:
      minio:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    ports:
      - "${FRONTEND_PORT:-8088}:80"
    depends_on:
      spring-service:
        condition: service_healthy

volumes:
  pgdata:
  minio_data: